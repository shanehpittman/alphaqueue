// Code generated by protoc-gen-go. DO NOT EDIT.
// source: queue/queuepb/queue.proto

package queuepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Queue struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId             string   `protobuf:"bytes,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Queue) Reset()         { *m = Queue{} }
func (m *Queue) String() string { return proto.CompactTextString(m) }
func (*Queue) ProtoMessage()    {}
func (*Queue) Descriptor() ([]byte, []int) {
	return fileDescriptor_0009de84f83eca09, []int{0}
}

func (m *Queue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Queue.Unmarshal(m, b)
}
func (m *Queue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Queue.Marshal(b, m, deterministic)
}
func (m *Queue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Queue.Merge(m, src)
}
func (m *Queue) XXX_Size() int {
	return xxx_messageInfo_Queue.Size(m)
}
func (m *Queue) XXX_DiscardUnknown() {
	xxx_messageInfo_Queue.DiscardUnknown(m)
}

var xxx_messageInfo_Queue proto.InternalMessageInfo

func (m *Queue) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Queue) GetAuthorId() string {
	if m != nil {
		return m.AuthorId
	}
	return ""
}

func (m *Queue) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Queue) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CreateQueueRequest struct {
	Queue                *Queue   `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateQueueRequest) Reset()         { *m = CreateQueueRequest{} }
func (m *CreateQueueRequest) String() string { return proto.CompactTextString(m) }
func (*CreateQueueRequest) ProtoMessage()    {}
func (*CreateQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0009de84f83eca09, []int{1}
}

func (m *CreateQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateQueueRequest.Unmarshal(m, b)
}
func (m *CreateQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateQueueRequest.Marshal(b, m, deterministic)
}
func (m *CreateQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateQueueRequest.Merge(m, src)
}
func (m *CreateQueueRequest) XXX_Size() int {
	return xxx_messageInfo_CreateQueueRequest.Size(m)
}
func (m *CreateQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateQueueRequest proto.InternalMessageInfo

func (m *CreateQueueRequest) GetQueue() *Queue {
	if m != nil {
		return m.Queue
	}
	return nil
}

type CreateQueueResponse struct {
	Queue                *Queue   `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateQueueResponse) Reset()         { *m = CreateQueueResponse{} }
func (m *CreateQueueResponse) String() string { return proto.CompactTextString(m) }
func (*CreateQueueResponse) ProtoMessage()    {}
func (*CreateQueueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0009de84f83eca09, []int{2}
}

func (m *CreateQueueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateQueueResponse.Unmarshal(m, b)
}
func (m *CreateQueueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateQueueResponse.Marshal(b, m, deterministic)
}
func (m *CreateQueueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateQueueResponse.Merge(m, src)
}
func (m *CreateQueueResponse) XXX_Size() int {
	return xxx_messageInfo_CreateQueueResponse.Size(m)
}
func (m *CreateQueueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateQueueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateQueueResponse proto.InternalMessageInfo

func (m *CreateQueueResponse) GetQueue() *Queue {
	if m != nil {
		return m.Queue
	}
	return nil
}

type DeleteQueueRequest struct {
	QueueId              string   `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteQueueRequest) Reset()         { *m = DeleteQueueRequest{} }
func (m *DeleteQueueRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteQueueRequest) ProtoMessage()    {}
func (*DeleteQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0009de84f83eca09, []int{3}
}

func (m *DeleteQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteQueueRequest.Unmarshal(m, b)
}
func (m *DeleteQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteQueueRequest.Marshal(b, m, deterministic)
}
func (m *DeleteQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteQueueRequest.Merge(m, src)
}
func (m *DeleteQueueRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteQueueRequest.Size(m)
}
func (m *DeleteQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteQueueRequest proto.InternalMessageInfo

func (m *DeleteQueueRequest) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

type DeleteQueueResponse struct {
	QueueId              string   `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteQueueResponse) Reset()         { *m = DeleteQueueResponse{} }
func (m *DeleteQueueResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteQueueResponse) ProtoMessage()    {}
func (*DeleteQueueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0009de84f83eca09, []int{4}
}

func (m *DeleteQueueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteQueueResponse.Unmarshal(m, b)
}
func (m *DeleteQueueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteQueueResponse.Marshal(b, m, deterministic)
}
func (m *DeleteQueueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteQueueResponse.Merge(m, src)
}
func (m *DeleteQueueResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteQueueResponse.Size(m)
}
func (m *DeleteQueueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteQueueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteQueueResponse proto.InternalMessageInfo

func (m *DeleteQueueResponse) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

type ListQueueRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListQueueRequest) Reset()         { *m = ListQueueRequest{} }
func (m *ListQueueRequest) String() string { return proto.CompactTextString(m) }
func (*ListQueueRequest) ProtoMessage()    {}
func (*ListQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0009de84f83eca09, []int{5}
}

func (m *ListQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListQueueRequest.Unmarshal(m, b)
}
func (m *ListQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListQueueRequest.Marshal(b, m, deterministic)
}
func (m *ListQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListQueueRequest.Merge(m, src)
}
func (m *ListQueueRequest) XXX_Size() int {
	return xxx_messageInfo_ListQueueRequest.Size(m)
}
func (m *ListQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListQueueRequest proto.InternalMessageInfo

type ListQueueResponse struct {
	Queue                *Queue   `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListQueueResponse) Reset()         { *m = ListQueueResponse{} }
func (m *ListQueueResponse) String() string { return proto.CompactTextString(m) }
func (*ListQueueResponse) ProtoMessage()    {}
func (*ListQueueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0009de84f83eca09, []int{6}
}

func (m *ListQueueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListQueueResponse.Unmarshal(m, b)
}
func (m *ListQueueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListQueueResponse.Marshal(b, m, deterministic)
}
func (m *ListQueueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListQueueResponse.Merge(m, src)
}
func (m *ListQueueResponse) XXX_Size() int {
	return xxx_messageInfo_ListQueueResponse.Size(m)
}
func (m *ListQueueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListQueueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListQueueResponse proto.InternalMessageInfo

func (m *ListQueueResponse) GetQueue() *Queue {
	if m != nil {
		return m.Queue
	}
	return nil
}

type ReadQueueRequest struct {
	QueueId              string   `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadQueueRequest) Reset()         { *m = ReadQueueRequest{} }
func (m *ReadQueueRequest) String() string { return proto.CompactTextString(m) }
func (*ReadQueueRequest) ProtoMessage()    {}
func (*ReadQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0009de84f83eca09, []int{7}
}

func (m *ReadQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadQueueRequest.Unmarshal(m, b)
}
func (m *ReadQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadQueueRequest.Marshal(b, m, deterministic)
}
func (m *ReadQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadQueueRequest.Merge(m, src)
}
func (m *ReadQueueRequest) XXX_Size() int {
	return xxx_messageInfo_ReadQueueRequest.Size(m)
}
func (m *ReadQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadQueueRequest proto.InternalMessageInfo

func (m *ReadQueueRequest) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

type ReadQueueResponse struct {
	Queue                *Queue   `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadQueueResponse) Reset()         { *m = ReadQueueResponse{} }
func (m *ReadQueueResponse) String() string { return proto.CompactTextString(m) }
func (*ReadQueueResponse) ProtoMessage()    {}
func (*ReadQueueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0009de84f83eca09, []int{8}
}

func (m *ReadQueueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadQueueResponse.Unmarshal(m, b)
}
func (m *ReadQueueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadQueueResponse.Marshal(b, m, deterministic)
}
func (m *ReadQueueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadQueueResponse.Merge(m, src)
}
func (m *ReadQueueResponse) XXX_Size() int {
	return xxx_messageInfo_ReadQueueResponse.Size(m)
}
func (m *ReadQueueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadQueueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadQueueResponse proto.InternalMessageInfo

func (m *ReadQueueResponse) GetQueue() *Queue {
	if m != nil {
		return m.Queue
	}
	return nil
}

type UpdateQueueRequest struct {
	Queue                *Queue   `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateQueueRequest) Reset()         { *m = UpdateQueueRequest{} }
func (m *UpdateQueueRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateQueueRequest) ProtoMessage()    {}
func (*UpdateQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0009de84f83eca09, []int{9}
}

func (m *UpdateQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateQueueRequest.Unmarshal(m, b)
}
func (m *UpdateQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateQueueRequest.Marshal(b, m, deterministic)
}
func (m *UpdateQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateQueueRequest.Merge(m, src)
}
func (m *UpdateQueueRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateQueueRequest.Size(m)
}
func (m *UpdateQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateQueueRequest proto.InternalMessageInfo

func (m *UpdateQueueRequest) GetQueue() *Queue {
	if m != nil {
		return m.Queue
	}
	return nil
}

type UpdateQueueResponse struct {
	Queue                *Queue   `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateQueueResponse) Reset()         { *m = UpdateQueueResponse{} }
func (m *UpdateQueueResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateQueueResponse) ProtoMessage()    {}
func (*UpdateQueueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0009de84f83eca09, []int{10}
}

func (m *UpdateQueueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateQueueResponse.Unmarshal(m, b)
}
func (m *UpdateQueueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateQueueResponse.Marshal(b, m, deterministic)
}
func (m *UpdateQueueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateQueueResponse.Merge(m, src)
}
func (m *UpdateQueueResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateQueueResponse.Size(m)
}
func (m *UpdateQueueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateQueueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateQueueResponse proto.InternalMessageInfo

func (m *UpdateQueueResponse) GetQueue() *Queue {
	if m != nil {
		return m.Queue
	}
	return nil
}

func init() {
	proto.RegisterType((*Queue)(nil), "queue.Queue")
	proto.RegisterType((*CreateQueueRequest)(nil), "queue.CreateQueueRequest")
	proto.RegisterType((*CreateQueueResponse)(nil), "queue.CreateQueueResponse")
	proto.RegisterType((*DeleteQueueRequest)(nil), "queue.DeleteQueueRequest")
	proto.RegisterType((*DeleteQueueResponse)(nil), "queue.DeleteQueueResponse")
	proto.RegisterType((*ListQueueRequest)(nil), "queue.ListQueueRequest")
	proto.RegisterType((*ListQueueResponse)(nil), "queue.ListQueueResponse")
	proto.RegisterType((*ReadQueueRequest)(nil), "queue.ReadQueueRequest")
	proto.RegisterType((*ReadQueueResponse)(nil), "queue.ReadQueueResponse")
	proto.RegisterType((*UpdateQueueRequest)(nil), "queue.UpdateQueueRequest")
	proto.RegisterType((*UpdateQueueResponse)(nil), "queue.UpdateQueueResponse")
}

func init() { proto.RegisterFile("queue/queuepb/queue.proto", fileDescriptor_0009de84f83eca09) }

var fileDescriptor_0009de84f83eca09 = []byte{
	// 352 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x41, 0x4f, 0xf2, 0x40,
	0x10, 0x86, 0x43, 0xbf, 0x0f, 0xa1, 0x53, 0x62, 0x60, 0x30, 0x71, 0xc1, 0x8b, 0xe9, 0xc9, 0x8b,
	0x40, 0xf0, 0x00, 0x5e, 0x8c, 0xd1, 0x5e, 0x48, 0xbc, 0x88, 0xf1, 0xe2, 0x85, 0x00, 0x3b, 0x89,
	0x9b, 0x10, 0x5a, 0xda, 0xad, 0x3f, 0xd8, 0x5f, 0x62, 0xdc, 0x5d, 0x37, 0x0b, 0x6d, 0x4c, 0xf1,
	0x02, 0x9d, 0x99, 0x7d, 0xe7, 0x9d, 0xe9, 0xd3, 0x85, 0xde, 0x2e, 0xa7, 0x9c, 0x86, 0xea, 0x37,
	0x59, 0xe9, 0xff, 0x41, 0x92, 0xc6, 0x32, 0xc6, 0xba, 0x0a, 0x42, 0x0e, 0xf5, 0xe7, 0xef, 0x07,
	0x3c, 0x05, 0x4f, 0x70, 0x56, 0xbb, 0xac, 0x5d, 0xf9, 0x73, 0x4f, 0x70, 0xbc, 0x00, 0x7f, 0x99,
	0xcb, 0xf7, 0x38, 0x5d, 0x08, 0xce, 0x3c, 0x95, 0x6e, 0xea, 0xc4, 0x8c, 0xe3, 0x19, 0xd4, 0xa5,
	0x90, 0x1b, 0x62, 0xff, 0x54, 0x41, 0x07, 0xc8, 0xa0, 0xb1, 0x8e, 0xb7, 0x92, 0xb6, 0x92, 0xfd,
	0x57, 0xf9, 0x9f, 0x30, 0x9c, 0x02, 0x3e, 0xa6, 0xb4, 0x94, 0xa4, 0xbc, 0xe6, 0xb4, 0xcb, 0x29,
	0x93, 0x18, 0x82, 0x1e, 0x42, 0xb9, 0x06, 0xe3, 0xd6, 0x40, 0xcf, 0xa7, 0xcf, 0x98, 0xf9, 0x6e,
	0xa1, 0xbb, 0xa7, 0xcc, 0x92, 0x78, 0x9b, 0x51, 0x25, 0xe9, 0x10, 0x30, 0xa2, 0x0d, 0x1d, 0x98,
	0xf6, 0xa0, 0xa9, 0xca, 0x0b, 0xbb, 0x6d, 0x43, 0xc5, 0x33, 0x1e, 0x8e, 0xa0, 0xbb, 0x27, 0x30,
	0x5e, 0xbf, 0x28, 0x10, 0xda, 0x4f, 0x22, 0x93, 0xae, 0x41, 0x38, 0x81, 0x8e, 0x93, 0x3b, 0x62,
	0xde, 0x6b, 0x68, 0xcf, 0x69, 0xc9, 0xab, 0x4e, 0x3b, 0x81, 0x8e, 0x73, 0xfc, 0x08, 0x9f, 0x29,
	0xe0, 0x6b, 0xc2, 0xff, 0x08, 0x63, 0x4f, 0x59, 0xdd, 0x74, 0xfc, 0xe9, 0x41, 0x4b, 0x25, 0x5e,
	0x28, 0xfd, 0x10, 0x6b, 0xc2, 0x08, 0x02, 0x07, 0x2c, 0xf6, 0x8c, 0xa8, 0xf8, 0x99, 0xf4, 0xfb,
	0x65, 0x25, 0x63, 0x1d, 0x41, 0xe0, 0x20, 0xb3, 0x5d, 0x8a, 0xdc, 0x6d, 0x97, 0x32, 0xc2, 0xf7,
	0xe0, 0x5b, 0x64, 0x78, 0x6e, 0x0e, 0x1e, 0x82, 0xed, 0xb3, 0x62, 0x41, 0xeb, 0x47, 0x35, 0xbc,
	0x03, 0xdf, 0xc2, 0xb0, 0x1d, 0x0e, 0x69, 0xda, 0x0e, 0x45, 0x6e, 0x11, 0x04, 0xce, 0x9b, 0xb5,
	0x7b, 0x14, 0x39, 0xd9, 0x3d, 0x4a, 0x40, 0x3c, 0xf8, 0x6f, 0x0d, 0x73, 0xd5, 0x57, 0x27, 0xea,
	0x96, 0xdf, 0x7c, 0x05, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x24, 0x81, 0x7c, 0x02, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueueServiceClient is the client API for QueueService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueueServiceClient interface {
	CreateQueue(ctx context.Context, in *CreateQueueRequest, opts ...grpc.CallOption) (*CreateQueueResponse, error)
	DeleteQueue(ctx context.Context, in *DeleteQueueRequest, opts ...grpc.CallOption) (*DeleteQueueResponse, error)
	ListQueue(ctx context.Context, in *ListQueueRequest, opts ...grpc.CallOption) (QueueService_ListQueueClient, error)
	ReadQueue(ctx context.Context, in *ReadQueueRequest, opts ...grpc.CallOption) (*ReadQueueResponse, error)
	UpdateQueue(ctx context.Context, in *UpdateQueueRequest, opts ...grpc.CallOption) (*UpdateQueueResponse, error)
}

type queueServiceClient struct {
	cc *grpc.ClientConn
}

func NewQueueServiceClient(cc *grpc.ClientConn) QueueServiceClient {
	return &queueServiceClient{cc}
}

func (c *queueServiceClient) CreateQueue(ctx context.Context, in *CreateQueueRequest, opts ...grpc.CallOption) (*CreateQueueResponse, error) {
	out := new(CreateQueueResponse)
	err := c.cc.Invoke(ctx, "/queue.QueueService/CreateQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueServiceClient) DeleteQueue(ctx context.Context, in *DeleteQueueRequest, opts ...grpc.CallOption) (*DeleteQueueResponse, error) {
	out := new(DeleteQueueResponse)
	err := c.cc.Invoke(ctx, "/queue.QueueService/DeleteQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueServiceClient) ListQueue(ctx context.Context, in *ListQueueRequest, opts ...grpc.CallOption) (QueueService_ListQueueClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QueueService_serviceDesc.Streams[0], "/queue.QueueService/ListQueue", opts...)
	if err != nil {
		return nil, err
	}
	x := &queueServiceListQueueClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type QueueService_ListQueueClient interface {
	Recv() (*ListQueueResponse, error)
	grpc.ClientStream
}

type queueServiceListQueueClient struct {
	grpc.ClientStream
}

func (x *queueServiceListQueueClient) Recv() (*ListQueueResponse, error) {
	m := new(ListQueueResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *queueServiceClient) ReadQueue(ctx context.Context, in *ReadQueueRequest, opts ...grpc.CallOption) (*ReadQueueResponse, error) {
	out := new(ReadQueueResponse)
	err := c.cc.Invoke(ctx, "/queue.QueueService/ReadQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueServiceClient) UpdateQueue(ctx context.Context, in *UpdateQueueRequest, opts ...grpc.CallOption) (*UpdateQueueResponse, error) {
	out := new(UpdateQueueResponse)
	err := c.cc.Invoke(ctx, "/queue.QueueService/UpdateQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueueServiceServer is the server API for QueueService service.
type QueueServiceServer interface {
	CreateQueue(context.Context, *CreateQueueRequest) (*CreateQueueResponse, error)
	DeleteQueue(context.Context, *DeleteQueueRequest) (*DeleteQueueResponse, error)
	ListQueue(*ListQueueRequest, QueueService_ListQueueServer) error
	ReadQueue(context.Context, *ReadQueueRequest) (*ReadQueueResponse, error)
	UpdateQueue(context.Context, *UpdateQueueRequest) (*UpdateQueueResponse, error)
}

// UnimplementedQueueServiceServer can be embedded to have forward compatible implementations.
type UnimplementedQueueServiceServer struct {
}

func (*UnimplementedQueueServiceServer) CreateQueue(ctx context.Context, req *CreateQueueRequest) (*CreateQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQueue not implemented")
}
func (*UnimplementedQueueServiceServer) DeleteQueue(ctx context.Context, req *DeleteQueueRequest) (*DeleteQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteQueue not implemented")
}
func (*UnimplementedQueueServiceServer) ListQueue(req *ListQueueRequest, srv QueueService_ListQueueServer) error {
	return status.Errorf(codes.Unimplemented, "method ListQueue not implemented")
}
func (*UnimplementedQueueServiceServer) ReadQueue(ctx context.Context, req *ReadQueueRequest) (*ReadQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadQueue not implemented")
}
func (*UnimplementedQueueServiceServer) UpdateQueue(ctx context.Context, req *UpdateQueueRequest) (*UpdateQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateQueue not implemented")
}

func RegisterQueueServiceServer(s *grpc.Server, srv QueueServiceServer) {
	s.RegisterService(&_QueueService_serviceDesc, srv)
}

func _QueueService_CreateQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).CreateQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/queue.QueueService/CreateQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).CreateQueue(ctx, req.(*CreateQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueueService_DeleteQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).DeleteQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/queue.QueueService/DeleteQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).DeleteQueue(ctx, req.(*DeleteQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueueService_ListQueue_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListQueueRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QueueServiceServer).ListQueue(m, &queueServiceListQueueServer{stream})
}

type QueueService_ListQueueServer interface {
	Send(*ListQueueResponse) error
	grpc.ServerStream
}

type queueServiceListQueueServer struct {
	grpc.ServerStream
}

func (x *queueServiceListQueueServer) Send(m *ListQueueResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _QueueService_ReadQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).ReadQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/queue.QueueService/ReadQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).ReadQueue(ctx, req.(*ReadQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueueService_UpdateQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).UpdateQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/queue.QueueService/UpdateQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).UpdateQueue(ctx, req.(*UpdateQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueueService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "queue.QueueService",
	HandlerType: (*QueueServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateQueue",
			Handler:    _QueueService_CreateQueue_Handler,
		},
		{
			MethodName: "DeleteQueue",
			Handler:    _QueueService_DeleteQueue_Handler,
		},
		{
			MethodName: "ReadQueue",
			Handler:    _QueueService_ReadQueue_Handler,
		},
		{
			MethodName: "UpdateQueue",
			Handler:    _QueueService_UpdateQueue_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListQueue",
			Handler:       _QueueService_ListQueue_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "queue/queuepb/queue.proto",
}
